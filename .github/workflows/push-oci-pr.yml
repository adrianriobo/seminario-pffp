#
# Copyright (C) 2025 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
name: oci-pr-push

on:
  workflow_run:
    workflows: 
    - oci-builds
    types:
      - completed
  
jobs:
  push:
    name: push
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.event == 'pull_request'
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Download mapt assets
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          name: artifacts
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ github.token }}
      
      - name: Get build information
        run: |
          echo "image=$(cat pffp-image)" >> "$GITHUB_ENV"

      - name: Log in to ghcr.io
        uses: redhat-actions/podman-login@4934294ad0449894bcd1e9f191899d7292469603 # v1.7
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    
      - name: Push pffp
        run: |
          # Load images from build
          podman load -i pffp-arm64.tar
          podman load -i pffp-amd64.tar 
          
          # Push
          podman push ${{ env.image }}-arm64
          podman push ${{ env.image }}-amd64
          podman manifest create ${{ env.image }}
          podman manifest add ${{ env.image }} docker://${{ env.image }}-arm64
          podman manifest add ${{ env.image }} docker://${{ env.image }}-amd64
          podman manifest push --all ${{ env.image }}